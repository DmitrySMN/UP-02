<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>